{
  "openapi": "3.0.0",
  "info": {
    "title": "Sensor Network - Open Data Portal API",
    "description": "The API for fetching data about the Karlskrona Archipelago's water quality",
    "version": "0.2"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Developer Server"
    }
  ],
  "paths": {
    "/upload": {
      "post": {
        "tags": [
          "Upload new data"
        ],
        "summary": "Uploads a new set of measurements to the database",
        "description": "Uploads a new set of measurements to the database",
        "operationId": "uploadMeasurements",
        "parameters": [
          {
            "name": "api_key",
            "in": "query",
            "description": "An API key is required in order to post data. These are not available to the public. If you feel like you are entitled one, please contact us and we'll look into it.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "default"
            }
          }
        ],
        "requestBody": {
          "description": "Posting data to the API in order to upload it to the database requires the JSON body to follow the following schema. You can provide multiple measurements at once simply by providing multiple `Measurement`-objects in the array. Note that all objects has to be a valid input for the request to be successful.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Measurement"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The data uploaded to the database. The data will be converted from the units provided to their respective SI unit (timestamp in UTC+0). The result of the conversions are shown in the response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UploadResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The provided JSON-body could not be parsed correctly. Response JSON contains information what could not be parsed, either the entire form (speciffied in field `formErrors`) or a specific field (specified in `fieldErrors`).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "formErrors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Expected array, received object"
                      }
                    },
                    "fieldErrors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed. The endpoint only accepts POST-requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Method GET is not allowed for this endpoint."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error prevented the data from being uploaded successfully. Please submit an Issue at the official Github repo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error uploading data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/temperature":{
      "get": {
        "tags": [
          "Fetch by data-type"
        ],
        "summary": "Gets a list of temperatures along with the date when it was taken",
        "description": "Retrieves a JSON object with the property \"content\" which consists of an array with objects containing the temperature along with the date",
        "operationId": "getTemperature",
        "parameters": [
          {
            "name": "unit",
            "in": "query",
            "description": "Optional. Sends the temperature based on what the unit is. Available units are `K`, `k`, `C`, `c`, `F` and `f`. If no unit is given, then the temperature unit is Kelvin",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "C"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data is successfully returned.",
            "content": {
              "application/json":{
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TemperatureResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the `unit` parameter receives a value other than the available units mentioned above",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Provided temperature unit is not supported. Read the documentation for valid parameters."
                    }
                  }
                }
              }
            }
          },
          "405":{
            "description": "Method not allowed. The endpoint only accepts GET-requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Method POST is not allowed for this endpoint"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error prevented the data from being fetched successfully. Please submit an Issue at the official Github repo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error fetching data from the database"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ph":{
      "get": {
        "tags": [
          "Fetch by data-type"
        ],
        "summary": "Gets a list of pH values along with the date when it was taken",
        "description": "Retrieves a JSON object with the property `content` which consists of an array with objects containing the pH value along with the date",
        "operationId": "getpH",
        "responses": {
          "200": {
            "description": "The data is successfully returned.",
            "content": {
              "application/json":{
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/pHResponse"
                  }
                }
              }
            }
          },
          "405":{
            "description": "Method not allowed. The endpoint only accepts GET-requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "formErrors": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Expected array, received object"
                      }
                    },
                    "fieldErrors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An internal server error prevented the data from being fetched successfully. Please submit an Issue at the official Github repo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error fetching data from the database"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Measurement": {
        "required": [
          "UTC_offset",
          "latitude",
          "longitude",
          "sensors",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-12 15:12:34"
          },
          "UTC_offset": {
            "type": "number",
            "format": "integer",
            "example": 2
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "example": 56.16082
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "example": 15.58671
          },
          "sensors": {
            "$ref": "#/components/schemas/Sensors"
          }
        },
        "description": "The given contract to upload data to the database."
      },
      "Sensors": {
        "minProperties": 1,
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "format": "float",
            "example": 20.6
          },
          "temperature_unit": {
            "type": "string",
            "example": "C"
          },
          "conductivity": {
            "type": "number",
            "format": "float",
            "example": 4.8
          },
          "conductivity_unit": {
            "type": "string",
            "example": "Spm"
          },
          "ph_level": {
            "type": "number",
            "format": "float",
            "example": 7.1
          }
        },
        "description": "At least one of the value-properties should be supplied. Supplying only a unit will throw an error. Units defaults to their SI-representative if not specified."
      },
      "UploadResponse": {
        "required": [
          "latitude",
          "longitude",
          "sensors",
          "timestamp"
        ],
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-22 13:12:34"
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "example": 56.16082
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "example": 15.58671
          },
          "sensors": {
            "$ref": "#/components/schemas/UploadResponse_sensors"
          }
        },
        "description": "The response objects from the `upload` endpoint. All data is converted to SI units (timestamp is in UTC+0), which is how they are stored in the database."
      },
      "TemperatureResponse": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "format": "float",
            "example": "289.0350036621094"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2007-12-11T18:05:11.000Z"
          }
        },
        "description": "The response from \"GET: / temperature\"-endpoint."
      },
      "pHResponse": {
        "type": "object",
        "properties": {
          "pH": {
            "type": "number",
            "format": "float",
            "example": "5.09119985487793"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2017-08-16T20:19:44.000Z"
          }
        },
        "description": "The response from \"GET: / pH\"-endpoint."
      },
      "UploadResponse_sensors": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "format": "float",
            "example": 293.75
          },
          "conductivity": {
            "type": "number",
            "format": "float",
            "example": 4.8
          },
          "ph_level": {
            "type": "number",
            "format": "float",
            "example": 7.1
          }
        }
      }
    }
  }
}
